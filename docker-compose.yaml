services:
  # -----------------------------
  # Infrastructure: ZooKeeper
  # -----------------------------
  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD", "zkServer.sh", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  # -----------------------------
  # Infrastructure: Kafka
  # -----------------------------
  kafka:
    image: bitnami/kafka:3.5
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "kafka:9092"]
      interval: 10s
      timeout: 5s
      retries: 10

  # -----------------------------
  # Application: Ingest Service
  # -----------------------------
  ingest_service:
    build:
      context: ./services
      dockerfile: ingest_service/Dockerfile
    container_name: ingest_service
    depends_on:
      kafka:
        condition: service_healthy
    restart: always

  # -----------------------------
  # Application: Detect Service
  # -----------------------------
  detect_service:
    build:
      context: ./services
      dockerfile: detect_service/Dockerfile
    container_name: detect_service
    depends_on:
      ingest_service:
        condition: service_started
    restart: always

  # -----------------------------
  # Application: Alert Service
  # -----------------------------
  alert_service:
    build:
      context: ./services
      dockerfile: alert_service/Dockerfile
    container_name: alert_service
    depends_on:
      detect_service:
        condition: service_started
    restart: always
